add_trace(
x = df$`Class Standing`,
y = df$linux,
name = "Linux"
) %>%
add_trace(
x = df$`Class Standing`,
y = df$other,
name = "Other"
)
plot
View(plot)
plot <- plot_ly(
x = df$`Class Standing`,
y = df$windows,
name = "Windows",
type = "bar"
) %>%
add_trace(
x = df$`Class Standing`,
y = df$mac,
name = "Max"
) %>%
add_trace(
x = df$`Class Standing`,
y = df$linux,
name = "Linux"
) %>%
add_trace(
x = df$`Class Standing`,
y = df$other,
name = "Other"
)
plot
plot <- plot_ly(
x = df$`Class Standing`,
y = df$windows,
name = "Windows",
type = "bar"
) %>% add_trace(
x = df$`Class Standing`,
y = df$mac,
name = "Max"
) %>% add_trace(
x = df$`Class Standing`,
y = df$linux,
name = "Linux"
) %>% add_trace(
x = df$`Class Standing`,
y = df$other,
name = "Other"
) %>% layout(barmode = "stack")
plot
df <- chart_data %>% group_by(`Class Standing`) %>%
summarise(
windows = length(which(`Operating System`=="Windows")),
mac = length(which(`Operating System`=="Mac")),
linux = length(which(`Operating System`=="Linux")),
other = length(which(`Operating System`=="Other")),
VCF_never = length(which(`Version Control Familiarity`=="Never used it")),
VCF_few = length(which(`Version Control Familiarity`=="Have used it a few times")),
VCF_intermediate = length(which(`Version Control Familiarity`=="Intermediate user")),
R_never = length(which(`R Familiarity`=="Never used it")),
R_few = length(which(`R Familiarity`=="Have used it a few times")),
R_intermediate = length(which(`R Familiarity`=="Intermediate user"))
) %>%
mutate(order = c(1,3,4,2)) %>%
arrange(order)
plot1 <- plot_ly(
x = df$`Class Standing`,
y = df$windows,
name = "Windows",
type = "bar"
) %>% add_trace(
x = df$`Class Standing`,
y = df$mac,
name = "Max"
) %>% add_trace(
x = df$`Class Standing`,
y = df$linux,
name = "Linux"
) %>% add_trace(
x = df$`Class Standing`,
y = df$other,
name = "Other"
) %>% layout(barmode = "stack")
plot2 <- plot_ly(
x = df$`Class Standing`,
y = df$R_never,
name = "Not familiar in R",
type = "bar"
) %>% add_trace(
x = df$`Class Standing`,
y = df$R_few,
name = "Somewhat familiar in R"
)
plot1
plot2
plot2 <- plot_ly(
x = df$`Class Standing`,
y = df$R_never,
name = "Not familiar in R",
type = "bar"
) %>% add_trace(
x = df$`Class Standing`,
y = df$R_few,
name = "Somewhat familiar in R"
) %>% layout(barmode = "stack")
plot2
plot1
plot1 <- plot_ly(
x = df$`Class Standing`,
y = df$windows,
name = "Windows",
type = "bar",
xaxis = "Class Standing",
yaxis = "Operating System",
title = "What Operating System Does Each Class Use?"
) %>% add_trace(
x = df$`Class Standing`,
y = df$mac,
name = "Max"
) %>% add_trace(
x = df$`Class Standing`,
y = df$linux,
name = "Linux"
) %>% add_trace(
x = df$`Class Standing`,
y = df$other,
name = "Other"
) %>% layout(barmode = "stack")
plot1
plot1 <- plot_ly(
x = df$`Class Standing`,
y = df$windows,
name = "Windows",
type = "bar"
) %>% add_trace(
x = df$`Class Standing`,
y = df$mac,
name = "Max"
) %>% add_trace(
x = df$`Class Standing`,
y = df$linux,
name = "Linux"
) %>% add_trace(
x = df$`Class Standing`,
y = df$other,
name = "Other"
) %>% layout(barmode = "stack",
xaxis = list(title = "Class Standing"),
yaxis = list(title = "Operating System"),
title = "What Operating System Does Each Class Use?")
plot1
View(data_)
chart_1(data_)
chart_1 <- function(data) {
chart_data <- data %>% select(What.is.your.current.class.standing.,
What.operating.system.do.you.typically.use.)
chart_data <- chart_data %>% rename("Class Standing"              = What.is.your.current.class.standing.,
"Operating System"            = What.operating.system.do.you.typically.use.)
levels(chart_data$`Operating System`)[levels(chart_data$`Operating System`)
=="Other: Windows at home, Linux (Ubuntu) at work"] <- "Other"
df <- chart_data %>% group_by(`Class Standing`) %>%
summarise(
windows = length(which(`Operating System`=="Windows")),
mac = length(which(`Operating System`=="Mac")),
linux = length(which(`Operating System`=="Linux")),
other = length(which(`Operating System`=="Other"))
) %>%
mutate(order = c(1,3,4,2)) %>%
arrange(order)
plot_ly(
x = df$`Class Standing`,
y = df$windows,
name = "Windows",
type = "bar"
) %>% add_trace(
x = df$`Class Standing`,
y = df$mac,
name = "Max"
) %>% add_trace(
x = df$`Class Standing`,
y = df$linux,
name = "Linux"
) %>% add_trace(
x = df$`Class Standing`,
y = df$other,
name = "Other"
) %>% layout(barmode = "stack",
xaxis = list(title = "Class Standing"),
yaxis = list(title = "Number of Students"),
title = "What Operating System Does Each Class Use?")
}
chart_1(data_)
View(chart_data)
library(shiny)
install.package('rvest')
install.package('rvest')
install.packages('rvest')
library(rvest)
install.packages('wordcloud')
library(wordcloud)
install.packages('tm')
library(tm)
shiny::runApp('info498f/lab-8')
shiny::runApp('info498f/lab-8')
shiny::runApp('info498f/lab-8')
library(shiny)
library(rvest)
library(wordcloud)
library(tm)
url <- "https://www.reddit.com/r/nfl/comments/46vray/tom_brady_is_currently_7_years_older_than_the/"
reddit_html <- read_html(url)
comments <- html_nodes(reddit_html, ".md p")
comments <- html_nodes(reddit_html, ".md p") %>%  html_text()
comments
shiny::runApp('info498f/lab-8')
shiny::runApp('info498f/lab-8')
shiny::runApp('info498f/lab-8')
shiny::runApp('info498f/lab-8')
shiny::runApp('info498f/lab-8')
shiny::runApp('info498f/lab-8')
shiny::runApp('info498f/lab-8')
shiny::runApp('info498f/lecture-16-exercises')
getwd()
setwd(C:/Users/Jared/Documents/info498f/a8-building-applications/)
setwd(C:/Users/Jared/Documents/info498f/a8-building-applications)
setwd(C:/Users/Jared/Documents/info498f/a8-building-applications-)
setwd("C:/Users/Jared/Documents/info498f/a8-building-applications-")
getwd()
setwd("C:/Users/Jared/Documents/info498f/a8-building-applications-")
library(datasets)
data <- read.csv(iris)
data <- read.csv("iris")
data <- iris
View(data)
is.data.frame(data)
library(shiny)
library(dplyr)
library(plotly)
library(datasets)
test <- data  %>% filter(Species == setosa)
test <- data %>% filter(Species = 'setosa')
library(dplyr)
test <- data %>% filter(Species = 'setosa')
test <- data %>% filter(Species == 'setosa')
View(test)
species <- "setosa"
df <- data %>% filter_(Species == species)
df <- data %>% filter(Species == species)
View(df)
trait <- "Sepal.Length"
x <- df$trait
x<- df %>% select(trait)
x <- select_(df, trait)
View(x)
df <- data %>% filter_(Species == species)
df <- df %>% select_(trait)
graph <- plot_ly(x = df, type = "histogram")
df <- data %>% filter_(Species == species)
df <- data %>% filter_("Species" == species)
View(df)
df <- data %>% filter(Species == species)
View(df)
df <- data %>% filter(Species == species)
df <- df %>% select_(trait)
graph <- plot_ly(x = df, type = "histogram")
View(graph)
x <- rnorm(50)
is.vector(x)
df <- data %>% filter(Species == species)
df <- df %>% select_(trait)
graph <- plot_ly(x = df[[1]], type = "histogram")
View(graph)
df[[1]]
x <- df[[1]]
is.Vector(x)
is.vector(x)
plot_ly(x = rnorm(10), type = "histogram")
plot_ly(x = df[[1]], type = "histogram")
graph
df
graph <- plot_ly(x = df[[1]], type = "histogram", xbins = list(size = .1))
graph
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start(min(df[[1]])),
end(max(df[[1]])),
size(.1)),
xaxis("test"))
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start(min(df[[1]])),
end(max(df[[1]])),
size(.1))
)
}
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start(min(df[[1]])),
end(max(df[[1]])),
size(.1))
)
graph
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start(min(df[[1]])),
end(max(df[[1]])))
)
graph
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start(1),
end(5)
)
graph
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start(1),
end(5)
))
graph
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = 1,
end 5
))
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = 1,
end = 5
))
graph
graph <- plot_ly(x = df[[1]],
type = "histogram",
)
graph
graph <- plot_ly(x = df$Sepal.Length,
type = "histogram",
)
graph
df <- data %>% filter(Species == species)
View(df)
graph <- plot_ly(x = df$`trait`,
type = "histogram",
)
graph
df$`trait`
df
df <- df %>% select_(trait)
df[1]
df[[1]]
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = 4,
end = 6,
size = .1
)
)
graph
df[[1]]
min(df[[1]])
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]]),
end = max(df[[1]]),
size = .1
)
)
graph
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])+.5,
end = max(df[[1]])+.5,
size = .1
)
)
graph
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])+.05,
end = max(df[[1]])+.05,
size = .1
)
)
graph
build_graph <- function(data, species, trait) {
df <- data %>% filter(Species == species)
df <- df %>% select_(trait)
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])-.05,
end = max(df[[1]])-.05,
size = .1
)
)
max(df[[1]])
d
feafds
<-dfasf
max(df[[1]])
graph
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])-.05,
end = max(df[[1]])-.05,
size = .1
)
)
graph
graph <- plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])-.05,
end = max(df[[1]])+.05,
size = .1
)
)
graph
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('~/info498f/lecture-16-exercises')
shiny::runApp()
shiny::runApp()
getwd()
setwd("C:/Users/Jared/Documents/info498f/a8-building-applications-")
setwd("C:/Users/Jared/Documents/info498f/a8-building-applications-")
setwd("C:/Users/Jared/Documents/info498f/a8-building-applications-")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])-.05,
end = max(df[[1]])+.05,
size = .1
)
)
species <- "versicolor"
trait <- "Petal.Width"
plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])-.05,
end = max(df[[1]])+.05,
size = .1
)
)
df <- data %>% filter(Species == species) %>% select_(trait)
plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])-.05,
end = max(df[[1]])+.05,
size = .1
)
)
df <- data %>% filter(Species == species) %>% select_(trait)
plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])-.05,
end = max(df[[1]])+.05,
size = .1
)
) %>% layout(
title = paste("Range of",trait,"in",species),
yaxis = paste("Number of Flowers"),
xaxis = paste("Measurement of",trait)
)
title = paste("Range of",trait,"in",species)
df <- data %>% filter(Species == species) %>% select_(trait)
plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])-.05,
end = max(df[[1]])+.05,
size = .1
)
) %>% layout(
title = paste("Range of",trait,"in the",species,"species"),
)
plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])-.05,
end = max(df[[1]])+.05,
size = .1
)
)
plot_ly(x = df[[1]],
type = "histogram",
xbins = list(start = min(df[[1]])-.05,
end = max(df[[1]])+.05,
size = .1
)
) %>% layout(
title = paste("Range of",trait,"in the",species,"species"),
yaxis = list(title = paste("Number of Flowers")),
xaxis = list(title = paste("Measurement of",trait))
)
shiny::runApp()
shiny::runApp('~/info498f/lecture-16-exercises')
shiny::runApp()
shiny::runApp('~/info498f/lecture-16-exercises')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
